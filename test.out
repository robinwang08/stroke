2019-11-02 21:58:52.473478: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
2019-11-02 21:58:52.861333: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1432] Found device 0 with properties: 
name: Quadro GV100 major: 7 minor: 0 memoryClockRate(GHz): 1.627
pciBusID: 0000:20:00.0
totalMemory: 31.72GiB freeMemory: 31.31GiB
2019-11-02 21:58:52.861377: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1511] Adding visible gpu devices: 0
2019-11-02 21:58:57.241932: I tensorflow/core/common_runtime/gpu/gpu_device.cc:982] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-11-02 21:58:57.242002: I tensorflow/core/common_runtime/gpu/gpu_device.cc:988]      0 
2019-11-02 21:58:57.242021: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1001] 0:   N 
2019-11-02 21:58:57.243139: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/device:GPU:0 with 30378 MB memory) -> physical GPU (device: 0, name: Quadro GV100, pci bus id: 0000:20:00.0, compute capability: 7.0)
Given configuration file:  /home/user1/robin/stroke/stroke/examples/configFiles/stroke/model/modelConfig.cfg
Given configuration file:  /home/user1/robin/stroke/stroke/examples/configFiles/stroke/test/testConfig.cfg
Creating necessary folders for testing session...
=============================== logger created =======================================

======================== Starting new session ============================
Command line arguments given: 
Namespace(device='cuda0', model_cfg='./examples/configFiles/stroke/model/modelConfig.cfg', reset_trainer=False, saved_model='/media/user1/my4TB/robin/stroke/output/saved_models/new/stroke.new.final.2019-11-02.15.45.21.531728.model.ckpt', test_cfg='./examples/configFiles/stroke/test/testConfig.cfg', train_cfg=None)
Available devices to Tensorflow:
[name: "/device:CPU:0"
device_type: "CPU"
memory_limit: 268435456
locality {
}
incarnation: 8767327614480512076
, name: "/device:XLA_GPU:0"
device_type: "XLA_GPU"
memory_limit: 17179869184
locality {
}
incarnation: 11658463309177301357
physical_device_desc: "device: XLA_GPU device"
, name: "/device:XLA_CPU:0"
device_type: "XLA_CPU"
memory_limit: 17179869184
locality {
}
incarnation: 12230076430513556865
physical_device_desc: "device: XLA_CPU device"
, name: "/device:GPU:0"
device_type: "GPU"
memory_limit: 31854546125
locality {
  bus_id: 1
  links {
  }
}
incarnation: 14689217927849544482
physical_device_desc: "device: 0, name: Quadro GV100, pci bus id: 0000:20:00.0, compute capability: 7.0"
]
CONFIG: The configuration file for the [model] given is: /home/user1/robin/stroke/stroke/examples/configFiles/stroke/model/modelConfig.cfg
=============================================================
========== PARAMETERS FOR MAKING THE ARCHITECTURE ===========
=============================================================
CNN model's name = stroke
~~~~~~~~~~~~~~~~~~Model parameters~~~~~~~~~~~~~~~~
Number of Classes (including background) = 2
~~Normal Pathway~~
Number of Input Channels = 4
Number of Layers = 8
Number of Feature Maps per layer = [30, 30, 40, 40, 40, 40, 50, 50]
Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]
Receptive Field = [17, 17, 17]
Residual connections added at the output of layers (indices from 0) = [3, 5, 7]
Layers that will be made of Lower Rank (indices from 0) = []
Lower Rank layers will be made of rank = []
~~Subsampled Pathway~~
Use subsampled Pathway = False
Number of subsampled pathways that will be built = 0
Number of Layers (per sub-pathway) = []
Number of Feature Maps per layer (per sub-pathway) = []
Kernel Dimensions per layer = []
Receptive Field = []
Subsampling Factor per dimension (per sub-pathway) = []
Residual connections added at the output of layers (indices from 0) = []
Layers that will be made of Lower Rank (indices from 0) = []
Lower Rank layers will be made of rank = []
~~Fully Connected Pathway~~
Number of additional FC layers (Excluding the Classif. Layer) = 2
Number of Feature Maps in the additional FC layers = [250, 250]
Residual connections added at the output of layers (indices from 0) = [1]
Layers that will be made of Lower Rank (indices from 0) = []
Dimensions of Kernels in the 1st FC layer (Classif. layer if no hidden FCs used) = [3, 3, 3]
~~Size Of Image Segments~~
Size of Segments for Training = [50, 50, 50]
Size of Segments for Validation = [25, 25, 25]
Size of Segments for Testing = [60, 60, 60]
~~Dropout Rates~~
Drop.R. for each layer in Normal Pathway = []
Drop.R. for each layer in Subsampled Pathway = []
Drop.R. for each layer in FC Pathway (additional FC layers + Classific.Layer at end) = [0.0, 0.5, 0.5]
~~Weight Initialization~~
Initialization method and params for the conv kernel weights = ['fanIn', 2]
~~Activation Function~~
Activation function to use = prelu
~~Batch Normalization~~
Apply BN straight on pathways' inputs (eg straight on segments) = [False, False, True]
Batch Normalization uses a rolling average for inference, over this many batches = 60
========== Done with printing session's parameters ==========
=============================================================
CONFIG: The configuration file for the [session] was loaded from: /home/user1/robin/stroke/stroke/examples/configFiles/stroke/test/testConfig.cfg

============     NEW TESTING SESSION    ===============

=============================================================
=========== PARAMETERS OF THIS TESTING SESSION ==============
=============================================================
sessionName = new
Model will be loaded from save = /media/user1/my4TB/robin/stroke/output/saved_models/new/stroke.new.final.2019-11-02.15.45.21.531728.model.ckpt
~~~~~~~~~~~~~~~~~~~~INPUT~~~~~~~~~~~~~~~~
Number of cases to perform inference on = 8
Paths to the channels of each case = [['/media/user1/my4TB/robin/stroke/new_all_padded/case_43/MTT.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_43/rCBF.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_43/rCBV.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_43/Tmax.nii'], ['/media/user1/my4TB/robin/stroke/new_all_padded/case_47/MTT.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_47/rCBF.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_47/rCBV.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_47/Tmax.nii'], ['/media/user1/my4TB/robin/stroke/new_all_padded/case_9/MTT.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_9/rCBF.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_9/rCBV.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_9/Tmax.nii'], ['/media/user1/my4TB/robin/stroke/new_all_padded/case_68/MTT.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_68/rCBF.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_68/rCBV.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_68/Tmax.nii'], ['/media/user1/my4TB/robin/stroke/new_all_padded/case_17/MTT.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_17/rCBF.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_17/rCBV.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_17/Tmax.nii'], ['/media/user1/my4TB/robin/stroke/new_all_padded/181/MTT.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/181/rCBF.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/181/rCBV.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/181/Tmax.nii'], ['/media/user1/my4TB/robin/stroke/new_all_padded/case_30/MTT.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_30/rCBF.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_30/rCBV.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_30/Tmax.nii'], ['/media/user1/my4TB/robin/stroke/new_all_padded/case_39/MTT.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_39/rCBF.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_39/rCBV.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_39/Tmax.nii']]
Paths to provided GT labels per case = ['/media/user1/my4TB/robin/stroke/new_all_padded/case_43/label.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_47/label.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_9/label.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_68/label.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_17/label.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/181/label.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_30/label.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_39/label.nii']
Filepaths of the ROI Masks provided per case = ['/media/user1/my4TB/robin/stroke/new_all_padded/case_43/mask.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_47/mask.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_9/mask.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_68/mask.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_17/mask.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/181/mask.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_30/mask.nii', '/media/user1/my4TB/robin/stroke/new_all_padded/case_39/mask.nii']
Batch size = 10
~~~~~~~~~~~~~~~~~~~OUTPUT~~~~~~~~~~~~~~~
2019-11-02 21:58:59.380116: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1511] Adding visible gpu devices: 0
2019-11-02 21:58:59.380163: I tensorflow/core/common_runtime/gpu/gpu_device.cc:982] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-11-02 21:58:59.380170: I tensorflow/core/common_runtime/gpu/gpu_device.cc:988]      0 
2019-11-02 21:58:59.380175: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1001] 0:   N 
2019-11-02 21:58:59.380586: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 30378 MB memory) -> physical GPU (device: 0, name: Quadro GV100, pci bus id: 0000:20:00.0, compute capability: 7.0)
2019-11-02 21:59:01.323652: W tensorflow/core/framework/allocator.cc:122] Allocation of 34560000 exceeds 10% of system memory.
2019-11-02 21:59:09.548723: W tensorflow/core/framework/allocator.cc:122] Allocation of 34560000 exceeds 10% of system memory.
2019-11-02 21:59:10.215942: W tensorflow/core/framework/allocator.cc:122] Allocation of 34560000 exceeds 10% of system memory.
2019-11-02 21:59:10.886122: W tensorflow/core/framework/allocator.cc:122] Allocation of 34560000 exceeds 10% of system memory.
2019-11-02 21:59:11.549201: W tensorflow/core/framework/allocator.cc:122] Allocation of 34560000 exceeds 10% of system memory.
Path to the main output-folder = /media/user1/my4TB/robin/stroke/output
Provided names to use to save results for each case = ['case_43-pred.nii', 'case_47-pred.nii', 'case_9-pred.nii', 'case_68-pred.nii', 'case_17-pred.nii', '181-pred.nii', 'case_30-pred.nii', 'case_39-pred.nii']
~~~~~~~Ouput-parameters for Predictions (segmentation and probability maps)~~~~
Save the predicted segmentation = True
Save the probability maps = [True, True]
Paths where to save predictions per case = ['/media/user1/my4TB/robin/stroke/output/predictions/new/predictions//case_43-pred.nii', '/media/user1/my4TB/robin/stroke/output/predictions/new/predictions//case_47-pred.nii', '/media/user1/my4TB/robin/stroke/output/predictions/new/predictions//case_9-pred.nii', '/media/user1/my4TB/robin/stroke/output/predictions/new/predictions//case_68-pred.nii', '/media/user1/my4TB/robin/stroke/output/predictions/new/predictions//case_17-pred.nii', '/media/user1/my4TB/robin/stroke/output/predictions/new/predictions//181-pred.nii', '/media/user1/my4TB/robin/stroke/output/predictions/new/predictions//case_30-pred.nii', '/media/user1/my4TB/robin/stroke/output/predictions/new/predictions//case_39-pred.nii']
Suffixes with which to save segmentations and probability maps = {'segm': 'Segm', 'prob': 'ProbMapClass'}
~~~~~~~Ouput-parameters for Feature Maps (FMs)~~~~~~
Save FMs in individual images = False
Save all requested FMs in one 4D image = False
Indices of min/max FMs to save, per type of pathway (normal/subsampled/FC) and per layer = None
Save Feature Maps at = ['/media/user1/my4TB/robin/stroke/output/predictions/new/features//case_43-pred.nii', '/media/user1/my4TB/robin/stroke/output/predictions/new/features//case_47-pred.nii', '/media/user1/my4TB/robin/stroke/output/predictions/new/features//case_9-pred.nii', '/media/user1/my4TB/robin/stroke/output/predictions/new/features//case_68-pred.nii', '/media/user1/my4TB/robin/stroke/output/predictions/new/features//case_17-pred.nii', '/media/user1/my4TB/robin/stroke/output/predictions/new/features//181-pred.nii', '/media/user1/my4TB/robin/stroke/output/predictions/new/features//case_30-pred.nii', '/media/user1/my4TB/robin/stroke/output/predictions/new/features//case_39-pred.nii']
~~~~~~~ Parameters for Preprocessing ~~~~~~
Pad Input Images = True
========== Done with printing session's parameters ==========
=============================================================

=======================================================

=========== Making the CNN graph... ===============
...Building the CNN model...
[Pathway_NORMAL] is being built...
	[Pathway_NORMAL]: Input's Shape: (Train) [None, 4, 50, 50, 50], (Val) [None, 4, 25, 25, 25], (Test) [None, 4, 60, 60, 60]
	[Conv.Layer_0], Filter Shape: [30, 4, 3, 3, 3]
	[Conv.Layer_0], Input's Shape: (Train) [None, 4, 50, 50, 50], (Val) [None, 4, 25, 25, 25], (Test) [None, 4, 60, 60, 60]
	[Conv.Layer_1], Filter Shape: [30, 30, 3, 3, 3]
	[Conv.Layer_1], Input's Shape: (Train) [None, 30, 48, 48, 48], (Val) [None, 30, 23, 23, 23], (Test) [None, 30, 58, 58, 58]
	[Conv.Layer_2], Filter Shape: [40, 30, 3, 3, 3]
	[Conv.Layer_2], Input's Shape: (Train) [None, 30, 46, 46, 46], (Val) [None, 30, 21, 21, 21], (Test) [None, 30, 56, 56, 56]
	[Conv.Layer_3], Filter Shape: [40, 40, 3, 3, 3]
	[Conv.Layer_3], Input's Shape: (Train) [None, 40, 44, 44, 44], (Val) [None, 40, 19, 19, 19], (Test) [None, 40, 54, 54, 54]
	[Pathway_NORMAL]: making Residual Connection between output of [Layer_3] to input of previous layer.
	[Conv.Layer_4], Filter Shape: [40, 40, 3, 3, 3]
	[Conv.Layer_4], Input's Shape: (Train) [None, 40, 42, 42, 42], (Val) [None, 40, 17, 17, 17], (Test) [None, 40, 52, 52, 52]
	[Conv.Layer_5], Filter Shape: [40, 40, 3, 3, 3]
	[Conv.Layer_5], Input's Shape: (Train) [None, 40, 40, 40, 40], (Val) [None, 40, 15, 15, 15], (Test) [None, 40, 50, 50, 50]
	[Pathway_NORMAL]: making Residual Connection between output of [Layer_5] to input of previous layer.
	[Conv.Layer_6], Filter Shape: [50, 40, 3, 3, 3]
	[Conv.Layer_6], Input's Shape: (Train) [None, 40, 38, 38, 38], (Val) [None, 40, 13, 13, 13], (Test) [None, 40, 48, 48, 48]
	[Conv.Layer_7], Filter Shape: [50, 50, 3, 3, 3]
	[Conv.Layer_7], Input's Shape: (Train) [None, 50, 36, 36, 36], (Val) [None, 50, 11, 11, 11], (Test) [None, 50, 46, 46, 46]
	[Pathway_NORMAL]: making Residual Connection between output of [Layer_7] to input of previous layer.
	[Pathway_NORMAL]: Output's Shape: (Train) [None, 50, 34, 34, 34], (Val) [None, 50, 9, 9, 9], (Test) [None, 50, 44, 44, 44]
[Pathway_NORMAL] done.
DEBUG: Shape of the kernel of the first FC layer is : [3, 3, 3]
DEBUG: Input to the FC Pathway will be padded by that many voxels per dimension: [2, 2, 2]
[Pathway_FC] is being built...
	[Pathway_FC]: Input's Shape: (Train) [None, 50, 36, 36, 36], (Val) [None, 50, 11, 11, 11], (Test) [None, 50, 46, 46, 46]
	[Conv.Layer_0], Filter Shape: [250, 50, 3, 3, 3]
	[Conv.Layer_0], Input's Shape: (Train) [None, 50, 36, 36, 36], (Val) [None, 50, 11, 11, 11], (Test) [None, 50, 46, 46, 46]
	[Conv.Layer_1], Filter Shape: [250, 250, 1, 1, 1]
	[Conv.Layer_1], Input's Shape: (Train) [None, 250, 34, 34, 34], (Val) [None, 250, 9, 9, 9], (Test) [None, 250, 44, 44, 44]
	[Pathway_FC]: making Residual Connection between output of [Layer_1] to input of previous layer.
	[Conv.Layer_2], Filter Shape: [2, 250, 1, 1, 1]
	[Conv.Layer_2], Input's Shape: (Train) [None, 250, 34, 34, 34], (Val) [None, 250, 9, 9, 9], (Test) [None, 250, 44, 44, 44]
	[Pathway_FC]: Output's Shape: (Train) [None, 2, 34, 34, 34], (Val) [None, 2, 9, 9, 9], (Test) [None, 2, 44, 44, 44]
[Pathway_FC] done.
Adding the final Softmax Target layer...
Finished building the CNN's model.
=========== Compiling the Testing Function ============
=======================================================

...Building the function for testing and visualisation of FMs...
...Collecting ops and feeds for testing...
Done.
=========== Loading parameters from specified saved model ===============
Loading parameters from:/media/user1/my4TB/robin/stroke/output/saved_models/new/stroke.new.final.2019-11-02.15.45.21.531728.model.ckpt
Parameters were loaded.

======================================================
=========== Testing with the CNN model ===============
======================================================

###########################################################################################################
############################# Starting full Segmentation of Testing subjects ##########################
###########################################################################################################
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~ Segmenting subject with index #0 ~~~~~~~~~~~~~~~~~~~~
 Loading subject with 1st channel at: /media/user1/my4TB/robin/stroke/new_all_padded/case_43/MTT.nii
 WARN: Loaded labels are dtype [float64]. Rounding and casting them to int!
Starting to (tile) extract Segments from the images of the subject for Segmentation...
Finished (tiling) extracting Segments from the images of the subject for Segmentation.
Starting to segment each image-part by calling the cnn.cnnTestModel(i). This part takes a few mins per volume...
Total number of Segments to process:60
Processed 10/60 segments.
Processed 20/60 segments.
Processed 30/60 segments.
Processed 40/60 segments.
Processed 50/60 segments.
Processed 60/60 segments.
TIMING: Segmentation of subject: [Extracting:] 0.00 [Loading:] 0.19 [ForwardPass:] 11.36 [Total:] 11.55 secs.
Saving the new label (segmentation) image for the subject #0
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_43-pred_Segm.nii.gz
Saving the new label (segmentation) image for the subject #0
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_43-pred_ProbMapClass0.nii.gz
Saving the new label (segmentation) image for the subject #0
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_43-pred_ProbMapClass1.nii.gz
+++++++++++++++++++++ Reporting Segmentation Metrics for the subject #0 ++++++++++++++++++++++++++
ACCURACY: (Testing) The Per-Class DICE Coefficients for subject with index #0 equal: DICE1=[ 0.7458 0.7458 ] DICE2=[ 0.7499 0.7499 ] DICE3=[ 0.7553 0.7553 ]
EXPLANATION: DICE1/2/3 are lists with the DICE per class. For Class-0, we calculate DICE for whole foreground, i.e all labels merged, except the background label=0. Useful for multi-class problems.
EXPLANATION: DICE1 is calculated as segmentation over whole volume VS whole Ground Truth (GT). DICE2 is the segmentation within the ROI vs GT. DICE3 is segmentation within the ROI vs the GT within the ROI.
EXPLANATION: If an ROI mask has been provided, you should be consulting DICE2 or DICE3.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~ Segmenting subject with index #1 ~~~~~~~~~~~~~~~~~~~~
 Loading subject with 1st channel at: /media/user1/my4TB/robin/stroke/new_all_padded/case_47/MTT.nii
 WARN: Loaded labels are dtype [float64]. Rounding and casting them to int!
Starting to (tile) extract Segments from the images of the subject for Segmentation...
Finished (tiling) extracting Segments from the images of the subject for Segmentation.
Starting to segment each image-part by calling the cnn.cnnTestModel(i). This part takes a few mins per volume...
Total number of Segments to process:60
Processed 10/60 segments.
Processed 20/60 segments.
Processed 30/60 segments.
Processed 40/60 segments.
Processed 50/60 segments.
Processed 60/60 segments.
TIMING: Segmentation of subject: [Extracting:] 0.01 [Loading:] 0.17 [ForwardPass:] 3.80 [Total:] 3.97 secs.
Saving the new label (segmentation) image for the subject #1
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_47-pred_Segm.nii.gz
Saving the new label (segmentation) image for the subject #1
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_47-pred_ProbMapClass0.nii.gz
Saving the new label (segmentation) image for the subject #1
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_47-pred_ProbMapClass1.nii.gz
+++++++++++++++++++++ Reporting Segmentation Metrics for the subject #1 ++++++++++++++++++++++++++
ACCURACY: (Testing) The Per-Class DICE Coefficients for subject with index #1 equal: DICE1=[ 0.8054 0.8054 ] DICE2=[ 0.8218 0.8218 ] DICE3=[ 0.8244 0.8244 ]
EXPLANATION: DICE1/2/3 are lists with the DICE per class. For Class-0, we calculate DICE for whole foreground, i.e all labels merged, except the background label=0. Useful for multi-class problems.
EXPLANATION: DICE1 is calculated as segmentation over whole volume VS whole Ground Truth (GT). DICE2 is the segmentation within the ROI vs GT. DICE3 is segmentation within the ROI vs the GT within the ROI.
EXPLANATION: If an ROI mask has been provided, you should be consulting DICE2 or DICE3.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~ Segmenting subject with index #2 ~~~~~~~~~~~~~~~~~~~~
 Loading subject with 1st channel at: /media/user1/my4TB/robin/stroke/new_all_padded/case_9/MTT.nii
 WARN: Loaded labels are dtype [float64]. Rounding and casting them to int!
Starting to (tile) extract Segments from the images of the subject for Segmentation...
Finished (tiling) extracting Segments from the images of the subject for Segmentation.
Starting to segment each image-part by calling the cnn.cnnTestModel(i). This part takes a few mins per volume...
Total number of Segments to process:60
Processed 10/60 segments.
Processed 20/60 segments.
Processed 30/60 segments.
Processed 40/60 segments.
Processed 50/60 segments.
Processed 60/60 segments.
TIMING: Segmentation of subject: [Extracting:] 0.01 [Loading:] 0.19 [ForwardPass:] 3.81 [Total:] 4.00 secs.
Saving the new label (segmentation) image for the subject #2
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_9-pred_Segm.nii.gz
Saving the new label (segmentation) image for the subject #2
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_9-pred_ProbMapClass0.nii.gz
Saving the new label (segmentation) image for the subject #2
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_9-pred_ProbMapClass1.nii.gz
+++++++++++++++++++++ Reporting Segmentation Metrics for the subject #2 ++++++++++++++++++++++++++
ACCURACY: (Testing) The Per-Class DICE Coefficients for subject with index #2 equal: DICE1=[ 0.5399 0.5399 ] DICE2=[ 0.5397 0.5397 ] DICE3=[ 0.5458 0.5458 ]
EXPLANATION: DICE1/2/3 are lists with the DICE per class. For Class-0, we calculate DICE for whole foreground, i.e all labels merged, except the background label=0. Useful for multi-class problems.
EXPLANATION: DICE1 is calculated as segmentation over whole volume VS whole Ground Truth (GT). DICE2 is the segmentation within the ROI vs GT. DICE3 is segmentation within the ROI vs the GT within the ROI.
EXPLANATION: If an ROI mask has been provided, you should be consulting DICE2 or DICE3.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~ Segmenting subject with index #3 ~~~~~~~~~~~~~~~~~~~~
 Loading subject with 1st channel at: /media/user1/my4TB/robin/stroke/new_all_padded/case_68/MTT.nii
 WARN: Loaded labels are dtype [float64]. Rounding and casting them to int!
Starting to (tile) extract Segments from the images of the subject for Segmentation...
Finished (tiling) extracting Segments from the images of the subject for Segmentation.
Starting to segment each image-part by calling the cnn.cnnTestModel(i). This part takes a few mins per volume...
Total number of Segments to process:60
Processed 10/60 segments.
Processed 20/60 segments.
Processed 30/60 segments.
Processed 40/60 segments.
Processed 50/60 segments.
Processed 60/60 segments.
TIMING: Segmentation of subject: [Extracting:] 0.01 [Loading:] 0.18 [ForwardPass:] 3.80 [Total:] 3.99 secs.
Saving the new label (segmentation) image for the subject #3
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_68-pred_Segm.nii.gz
Saving the new label (segmentation) image for the subject #3
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_68-pred_ProbMapClass0.nii.gz
Saving the new label (segmentation) image for the subject #3
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_68-pred_ProbMapClass1.nii.gz
+++++++++++++++++++++ Reporting Segmentation Metrics for the subject #3 ++++++++++++++++++++++++++
ACCURACY: (Testing) The Per-Class DICE Coefficients for subject with index #3 equal: DICE1=[ 0.4472 0.4472 ] DICE2=[ 0.4513 0.4513 ] DICE3=[ 0.4515 0.4515 ]
EXPLANATION: DICE1/2/3 are lists with the DICE per class. For Class-0, we calculate DICE for whole foreground, i.e all labels merged, except the background label=0. Useful for multi-class problems.
EXPLANATION: DICE1 is calculated as segmentation over whole volume VS whole Ground Truth (GT). DICE2 is the segmentation within the ROI vs GT. DICE3 is segmentation within the ROI vs the GT within the ROI.
EXPLANATION: If an ROI mask has been provided, you should be consulting DICE2 or DICE3.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~ Segmenting subject with index #4 ~~~~~~~~~~~~~~~~~~~~
 Loading subject with 1st channel at: /media/user1/my4TB/robin/stroke/new_all_padded/case_17/MTT.nii
 WARN: Loaded labels are dtype [float64]. Rounding and casting them to int!
Starting to (tile) extract Segments from the images of the subject for Segmentation...
Finished (tiling) extracting Segments from the images of the subject for Segmentation.
Starting to segment each image-part by calling the cnn.cnnTestModel(i). This part takes a few mins per volume...
Total number of Segments to process:60
Processed 10/60 segments.
Processed 20/60 segments.
Processed 30/60 segments.
Processed 40/60 segments.
Processed 50/60 segments.
Processed 60/60 segments.
TIMING: Segmentation of subject: [Extracting:] 0.01 [Loading:] 0.14 [ForwardPass:] 3.69 [Total:] 3.83 secs.
Saving the new label (segmentation) image for the subject #4
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_17-pred_Segm.nii.gz
Saving the new label (segmentation) image for the subject #4
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_17-pred_ProbMapClass0.nii.gz
Saving the new label (segmentation) image for the subject #4
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_17-pred_ProbMapClass1.nii.gz
+++++++++++++++++++++ Reporting Segmentation Metrics for the subject #4 ++++++++++++++++++++++++++
ACCURACY: (Testing) The Per-Class DICE Coefficients for subject with index #4 equal: DICE1=[ 0.3620 0.3620 ] DICE2=[ 0.3622 0.3622 ] DICE3=[ 0.3622 0.3622 ]
EXPLANATION: DICE1/2/3 are lists with the DICE per class. For Class-0, we calculate DICE for whole foreground, i.e all labels merged, except the background label=0. Useful for multi-class problems.
EXPLANATION: DICE1 is calculated as segmentation over whole volume VS whole Ground Truth (GT). DICE2 is the segmentation within the ROI vs GT. DICE3 is segmentation within the ROI vs the GT within the ROI.
EXPLANATION: If an ROI mask has been provided, you should be consulting DICE2 or DICE3.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~ Segmenting subject with index #5 ~~~~~~~~~~~~~~~~~~~~
 Loading subject with 1st channel at: /media/user1/my4TB/robin/stroke/new_all_padded/181/MTT.nii
 WARN: Loaded labels are dtype [float64]. Rounding and casting them to int!
Starting to (tile) extract Segments from the images of the subject for Segmentation...
Finished (tiling) extracting Segments from the images of the subject for Segmentation.
Starting to segment each image-part by calling the cnn.cnnTestModel(i). This part takes a few mins per volume...
Total number of Segments to process:90
Processed 10/90 segments.
Processed 20/90 segments.
Processed 30/90 segments.
Processed 40/90 segments.
Processed 50/90 segments.
Processed 60/90 segments.
Processed 70/90 segments.
Processed 80/90 segments.
Processed 90/90 segments.
TIMING: Segmentation of subject: [Extracting:] 0.01 [Loading:] 0.35 [ForwardPass:] 5.71 [Total:] 6.07 secs.
Saving the new label (segmentation) image for the subject #5
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/181-pred_Segm.nii.gz
Saving the new label (segmentation) image for the subject #5
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/181-pred_ProbMapClass0.nii.gz
Saving the new label (segmentation) image for the subject #5
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/181-pred_ProbMapClass1.nii.gz
+++++++++++++++++++++ Reporting Segmentation Metrics for the subject #5 ++++++++++++++++++++++++++
ACCURACY: (Testing) The Per-Class DICE Coefficients for subject with index #5 equal: DICE1=[ 0.0637 0.0637 ] DICE2=[ 0.0739 0.0739 ] DICE3=[ 0.0740 0.0740 ]
EXPLANATION: DICE1/2/3 are lists with the DICE per class. For Class-0, we calculate DICE for whole foreground, i.e all labels merged, except the background label=0. Useful for multi-class problems.
EXPLANATION: DICE1 is calculated as segmentation over whole volume VS whole Ground Truth (GT). DICE2 is the segmentation within the ROI vs GT. DICE3 is segmentation within the ROI vs the GT within the ROI.
EXPLANATION: If an ROI mask has been provided, you should be consulting DICE2 or DICE3.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~ Segmenting subject with index #6 ~~~~~~~~~~~~~~~~~~~~
 Loading subject with 1st channel at: /media/user1/my4TB/robin/stroke/new_all_padded/case_30/MTT.nii
 WARN: Loaded labels are dtype [float64]. Rounding and casting them to int!
Starting to (tile) extract Segments from the images of the subject for Segmentation...
Finished (tiling) extracting Segments from the images of the subject for Segmentation.
Starting to segment each image-part by calling the cnn.cnnTestModel(i). This part takes a few mins per volume...
Total number of Segments to process:50
Processed 10/50 segments.
Processed 20/50 segments.
Processed 30/50 segments.
Processed 40/50 segments.
Processed 50/50 segments.
TIMING: Segmentation of subject: [Extracting:] 0.01 [Loading:] 0.13 [ForwardPass:] 3.08 [Total:] 3.22 secs.
Saving the new label (segmentation) image for the subject #6
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_30-pred_Segm.nii.gz
Saving the new label (segmentation) image for the subject #6
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_30-pred_ProbMapClass0.nii.gz
Saving the new label (segmentation) image for the subject #6
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_30-pred_ProbMapClass1.nii.gz
+++++++++++++++++++++ Reporting Segmentation Metrics for the subject #6 ++++++++++++++++++++++++++
ACCURACY: (Testing) The Per-Class DICE Coefficients for subject with index #6 equal: DICE1=[ 0.4404 0.4404 ] DICE2=[ 0.4449 0.4449 ] DICE3=[ 0.4452 0.4452 ]
EXPLANATION: DICE1/2/3 are lists with the DICE per class. For Class-0, we calculate DICE for whole foreground, i.e all labels merged, except the background label=0. Useful for multi-class problems.
EXPLANATION: DICE1 is calculated as segmentation over whole volume VS whole Ground Truth (GT). DICE2 is the segmentation within the ROI vs GT. DICE3 is segmentation within the ROI vs the GT within the ROI.
EXPLANATION: If an ROI mask has been provided, you should be consulting DICE2 or DICE3.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~ Segmenting subject with index #7 ~~~~~~~~~~~~~~~~~~~~
 Loading subject with 1st channel at: /media/user1/my4TB/robin/stroke/new_all_padded/case_39/MTT.nii
 WARN: Loaded labels are dtype [float64]. Rounding and casting them to int!
Starting to (tile) extract Segments from the images of the subject for Segmentation...
Finished (tiling) extracting Segments from the images of the subject for Segmentation.
Starting to segment each image-part by calling the cnn.cnnTestModel(i). This part takes a few mins per volume...
Total number of Segments to process:50
Processed 10/50 segments.
Processed 20/50 segments.
Processed 30/50 segments.
Processed 40/50 segments.
Processed 50/50 segments.
TIMING: Segmentation of subject: [Extracting:] 0.01 [Loading:] 0.08 [ForwardPass:] 3.13 [Total:] 3.21 secs.
Saving the new label (segmentation) image for the subject #7
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_39-pred_Segm.nii.gz
Saving the new label (segmentation) image for the subject #7
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_39-pred_ProbMapClass0.nii.gz
Saving the new label (segmentation) image for the subject #7
Image saved at: /media/user1/my4TB/robin/stroke/output/predictions/new/predictions/case_39-pred_ProbMapClass1.nii.gz
+++++++++++++++++++++ Reporting Segmentation Metrics for the subject #7 ++++++++++++++++++++++++++
ACCURACY: (Testing) The Per-Class DICE Coefficients for subject with index #7 equal: DICE1=[ 0.3472 0.3472 ] DICE2=[ 0.3482 0.3482 ] DICE3=[ 0.3482 0.3482 ]
EXPLANATION: DICE1/2/3 are lists with the DICE per class. For Class-0, we calculate DICE for whole foreground, i.e all labels merged, except the background label=0. Useful for multi-class problems.
EXPLANATION: DICE1 is calculated as segmentation over whole volume VS whole Ground Truth (GT). DICE2 is the segmentation within the ROI vs GT. DICE3 is segmentation within the ROI vs the GT within the ROI.
EXPLANATION: If an ROI mask has been provided, you should be consulting DICE2 or DICE3.
+++++++++++++++++++++++++++++++ Segmentation of all subjects finished +++++++++++++++++++++++++++++++++++
+++++++++++++++++++++ Reporting Average Segmentation Metrics over all subjects ++++++++++++++++++++++++++
ACCURACY: (Testing) The Per-Class average DICE Coefficients over all subjects are: DICE1=[ 0.4690 0.4690 ] DICE2=[ 0.4740 0.4740 ] DICE3=[ 0.4758 0.4758 ]
EXPLANATION: DICE1/2/3 are lists with the DICE per class. For Class-0, we calculate DICE for whole foreground, i.e all labels merged, except the background label=0. Useful for multi-class problems./home/user1/Envs/stroke-7IP6OJ3H/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:523: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/user1/Envs/stroke-7IP6OJ3H/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:524: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/user1/Envs/stroke-7IP6OJ3H/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/user1/Envs/stroke-7IP6OJ3H/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:526: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/user1/Envs/stroke-7IP6OJ3H/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:527: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/user1/Envs/stroke-7IP6OJ3H/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:532: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])

EXPLANATION: DICE1 is calculated as segmentation over whole volume VS whole Ground Truth (GT). DICE2 is the segmentation within the ROI vs GT. DICE3 is segmentation within the ROI vs the GT within the ROI.
EXPLANATION: If an ROI mask has been provided, you should be consulting DICE2 or DICE3.
TIMING: Testing process lasted: 57.94 secs.
###########################################################################################################
############################# Finished full Segmentation of Testing subjects ##########################
###########################################################################################################

======================================================
=========== Testing session finished =================
======================================================
Finished.
